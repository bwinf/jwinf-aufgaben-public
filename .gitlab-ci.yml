stages:
  - gitcopy
  - testdeploy
  - deploy

testdeploy:
  image: 'alpine'
  stage: testdeploy
  only:
    - main
    - deploy
  script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk add --no-cache openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY_TEST_JWINF" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    # Stop server and upload
    - ssh medald@jim.test.bwinf.de "cd medal/tasks/jwinf/jwinf-aufgaben-public ; git pull"
    - ssh medald@jim.test.bwinf.de "cd medal/tasks/jwinf/_common/modules ; git pull"
    - ssh medald@jim.test.bwinf.de "sudo /bin/systemctl restart medal && exit"
    - ssh medald@jim.test.bwinf.de "sudo /bin/systemctl restart medalp && exit"
    - sleep 30
    - ssh medald@jim.test.bwinf.de "sudo /bin/systemctl status medal && exit"
    - ssh medald@jim.test.bwinf.de "sudo /bin/systemctl status medalp && exit"


deploy:
  image: 'alpine:latest'
  stage: deploy
  only:
    - main
    - deploy
  script:
    # Setup SSH deploy keys
    - 'which ssh-agent || ( apk add --no-cache openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_KEY_JWINF" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    # Stop server and upload
    - ssh medald@jwinf.de "cd medal/tasks/jwinf/jwinf-aufgaben-public ; git pull"
    - ssh medald@jwinf.de "cd medal/tasks/jwinf/_common/modules ; git pull"
    - ssh medald@jwinf.de "sudo /bin/systemctl restart medal && exit"
    - sleep 30
    - ssh medald@jwinf.de "sudo /bin/systemctl status medal && exit"


gitcopy:
  image: 
    name: alpine/git
    entrypoint: [""]
  stage: gitcopy
  only:
    - main
  variables:
    GIT_DEPTH: 0
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh-add <(echo "$GITHUB_DEPLOY_KEY_PRIVATE")
    - git checkout $CI_COMMIT_BRANCH
    - git fetch --all
    - git reset --hard origin/$CI_COMMIT_BRANCH
    - git push git@github.com:bwinf/jwinf-aufgaben-public.git
